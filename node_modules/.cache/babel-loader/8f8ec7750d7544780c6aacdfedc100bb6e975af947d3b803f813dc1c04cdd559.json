{"ast":null,"code":"import { FILTER_GENRES } from \"./actions\";\nimport { GET_GAMES } from \"./actions\";\nimport { CREATE_GAME } from \"./actions\";\nimport { GAME_DETAIL } from \"./actions\";\nconst initialState = {\n  allGames: [],\n  gameDetail: {}\n};\nconst rootReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case GET_GAMES:\n      return {\n        ...state,\n        allGames: action.payload\n      };\n    case GAME_DETAIL:\n      return {\n        ...state,\n        gameDetail: action.payload\n      };\n    case FILTER_GENRES:\n      return {\n        ...state,\n        allGames: action.payload === \"All\" ? state.allGames : state.allGames.filter(game => game.genres === action.payload)\n      };\n    case CREATE_GAME:\n      return {\n        ...state,\n        allGames: [...state.allGames, action.payload]\n      };\n    default:\n      return {\n        ...state\n      };\n  }\n};\nexport default rootReducer;","map":{"version":3,"names":["FILTER_GENRES","GET_GAMES","CREATE_GAME","GAME_DETAIL","initialState","allGames","gameDetail","rootReducer","state","arguments","length","undefined","action","type","payload","filter","game","genres"],"sources":["C:/Users/Admin/Desktop/PI-Videogames-main/client/src/Redux/reducer.js"],"sourcesContent":["import { FILTER_GENRES } from \"./actions\";\r\nimport { GET_GAMES } from \"./actions\";\r\nimport { CREATE_GAME } from \"./actions\";\r\nimport { GAME_DETAIL } from \"./actions\";\r\n\r\nconst initialState = {\r\n  allGames: [],\r\n  gameDetail: {},\r\n};\r\n\r\nconst rootReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case GET_GAMES:\r\n      return {\r\n        ...state,\r\n        allGames: action.payload,\r\n      };\r\n\r\n    case GAME_DETAIL:\r\n      return {\r\n        ...state,\r\n        gameDetail: action.payload,\r\n      };\r\n\r\n    case FILTER_GENRES:\r\n      return {\r\n        ...state,\r\n        allGames:\r\n          action.payload === \"All\"\r\n            ? state.allGames\r\n            : state.allGames.filter((game) => game.genres === action.payload),\r\n      };\r\n\r\n    case CREATE_GAME:\r\n      return {\r\n        ...state,\r\n        allGames: [...state.allGames, action.payload],\r\n      };\r\n\r\n    default:\r\n      return { ...state };\r\n  }\r\n};\r\nexport default rootReducer;\r\n"],"mappings":"AAAA,SAASA,aAAa,QAAQ,WAAW;AACzC,SAASC,SAAS,QAAQ,WAAW;AACrC,SAASC,WAAW,QAAQ,WAAW;AACvC,SAASC,WAAW,QAAQ,WAAW;AAEvC,MAAMC,YAAY,GAAG;EACnBC,QAAQ,EAAE,EAAE;EACZC,UAAU,EAAE,CAAC;AACf,CAAC;AAED,MAAMC,WAAW,GAAG,SAAAA,CAAA,EAAkC;EAAA,IAAjCC,KAAK,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAGL,YAAY;EAAA,IAAEQ,MAAM,GAAAH,SAAA,CAAAC,MAAA,OAAAD,SAAA,MAAAE,SAAA;EAC/C,QAAQC,MAAM,CAACC,IAAI;IACjB,KAAKZ,SAAS;MACZ,OAAO;QACL,GAAGO,KAAK;QACRH,QAAQ,EAAEO,MAAM,CAACE;MACnB,CAAC;IAEH,KAAKX,WAAW;MACd,OAAO;QACL,GAAGK,KAAK;QACRF,UAAU,EAAEM,MAAM,CAACE;MACrB,CAAC;IAEH,KAAKd,aAAa;MAChB,OAAO;QACL,GAAGQ,KAAK;QACRH,QAAQ,EACNO,MAAM,CAACE,OAAO,KAAK,KAAK,GACpBN,KAAK,CAACH,QAAQ,GACdG,KAAK,CAACH,QAAQ,CAACU,MAAM,CAAEC,IAAI,IAAKA,IAAI,CAACC,MAAM,KAAKL,MAAM,CAACE,OAAO;MACtE,CAAC;IAEH,KAAKZ,WAAW;MACd,OAAO;QACL,GAAGM,KAAK;QACRH,QAAQ,EAAE,CAAC,GAAGG,KAAK,CAACH,QAAQ,EAAEO,MAAM,CAACE,OAAO;MAC9C,CAAC;IAEH;MACE,OAAO;QAAE,GAAGN;MAAM,CAAC;EAAC;AAE1B,CAAC;AACD,eAAeD,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}