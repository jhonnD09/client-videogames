{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\PI-Videogames-main\\\\client\\\\src\\\\components\\\\Home\\\\Home.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { Card } from \"../Card/Card\";\nimport style from \"../Home/Home.module.css\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getGames, getPlatforms } from \"../../Redux/actions\";\nimport Paginado from \"./Paginado\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Home = () => {\n  _s();\n  const allgames = useSelector(state => state.allGames);\n  const dispatch = useDispatch();\n  const [currentPage, setCurrentPage] = useState(1); // Pagina Acutal\n\n  const [videoJuegosPorPagina, setVideoJuegosPorPagina] = useState(15); // video juegos por pagina\n\n  const indexOfLastGames = currentPage * videoJuegosPorPagina; //15 que es el indice del ultimo video juego\n\n  const indexOfFirstGames = indexOfLastGames - videoJuegosPorPagina; //0 que es el indice del primer video juego\n\n  const currentVideogames = allgames.slice(indexOfFirstGames, indexOfLastGames); // los videojuegos que se mostraran por pagina\n\n  // const [order, setOrder] = useState(\"\");\n\n  const paginado = numPage => {\n    setCurrentPage(numPage);\n  };\n  useEffect(() => {\n    if (allgames.length < 1) {\n      dispatch(getGames());\n    }\n    dispatch(getPlatforms());\n  }, [dispatch]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: style.containt,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: style.pagina,\n      children: /*#__PURE__*/_jsxDEV(Paginado, {\n        allGames: allgames.length,\n        videoJuegosPorPagina: videoJuegosPorPagina,\n        paginado: paginado\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), currentVideogames === null || currentVideogames === void 0 ? void 0 : currentVideogames.map(elem => {\n      return /*#__PURE__*/_jsxDEV(Card, {\n        id: elem.id,\n        name: elem.name,\n        background_image: elem.background_image,\n        genres: !elem.createdInDb ? elem.genres : elem.Genres.map(elem => elem.name).join(\", \")\n      }, elem.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n_s(Home, \"un1JsjsV5laB2WYAbSeYviZg1IE=\", false, function () {\n  return [useSelector, useDispatch];\n});\n_c = Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["useEffect","useState","Card","style","useDispatch","useSelector","getGames","getPlatforms","Paginado","jsxDEV","_jsxDEV","Home","_s","allgames","state","allGames","dispatch","currentPage","setCurrentPage","videoJuegosPorPagina","setVideoJuegosPorPagina","indexOfLastGames","indexOfFirstGames","currentVideogames","slice","paginado","numPage","length","className","containt","children","pagina","fileName","_jsxFileName","lineNumber","columnNumber","map","elem","id","name","background_image","genres","createdInDb","Genres","join","_c","$RefreshReg$"],"sources":["C:/Users/Admin/Desktop/PI-Videogames-main/client/src/components/Home/Home.jsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport { Card } from \"../Card/Card\";\r\nimport style from \"../Home/Home.module.css\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getGames, getPlatforms } from \"../../Redux/actions\";\r\nimport Paginado from \"./Paginado\";\r\n\r\nexport const Home = () => {\r\n  const allgames = useSelector((state) => state.allGames);\r\n  const dispatch = useDispatch();\r\n\r\n  const [currentPage, setCurrentPage] = useState(1); // Pagina Acutal\r\n\r\n  const [videoJuegosPorPagina, setVideoJuegosPorPagina] = useState(15); // video juegos por pagina\r\n\r\n  const indexOfLastGames = currentPage * videoJuegosPorPagina; //15 que es el indice del ultimo video juego\r\n\r\n  const indexOfFirstGames = indexOfLastGames - videoJuegosPorPagina; //0 que es el indice del primer video juego\r\n\r\n  const currentVideogames = allgames.slice(indexOfFirstGames, indexOfLastGames); // los videojuegos que se mostraran por pagina\r\n\r\n  // const [order, setOrder] = useState(\"\");\r\n\r\n  const paginado = (numPage) => {\r\n    setCurrentPage(numPage);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (allgames.length < 1) {\r\n      dispatch(getGames());\r\n    }\r\n    dispatch(getPlatforms());\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <div className={style.containt}>\r\n      <div className={style.pagina}>\r\n        <Paginado\r\n          allGames={allgames.length}\r\n          videoJuegosPorPagina={videoJuegosPorPagina}\r\n          paginado={paginado}\r\n        />\r\n      </div>\r\n      {currentVideogames?.map((elem) => {\r\n        return (\r\n          <Card\r\n            key={elem.id}\r\n            id={elem.id}\r\n            name={elem.name}\r\n            background_image={elem.background_image}\r\n            genres={\r\n              !elem.createdInDb\r\n                ? elem.genres\r\n                : elem.Genres.map((elem) => elem.name).join(\", \")\r\n            }\r\n          />\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,SAASC,IAAI,QAAQ,cAAc;AACnC,OAAOC,KAAK,MAAM,yBAAyB;AAC3C,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,QAAQ,EAAEC,YAAY,QAAQ,qBAAqB;AAC5D,OAAOC,QAAQ,MAAM,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElC,OAAO,MAAMC,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAMC,QAAQ,GAAGR,WAAW,CAAES,KAAK,IAAKA,KAAK,CAACC,QAAQ,CAAC;EACvD,MAAMC,QAAQ,GAAGZ,WAAW,EAAE;EAE9B,MAAM,CAACa,WAAW,EAAEC,cAAc,CAAC,GAAGjB,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;;EAEnD,MAAM,CAACkB,oBAAoB,EAAEC,uBAAuB,CAAC,GAAGnB,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;;EAEtE,MAAMoB,gBAAgB,GAAGJ,WAAW,GAAGE,oBAAoB,CAAC,CAAC;;EAE7D,MAAMG,iBAAiB,GAAGD,gBAAgB,GAAGF,oBAAoB,CAAC,CAAC;;EAEnE,MAAMI,iBAAiB,GAAGV,QAAQ,CAACW,KAAK,CAACF,iBAAiB,EAAED,gBAAgB,CAAC,CAAC,CAAC;;EAE/E;;EAEA,MAAMI,QAAQ,GAAIC,OAAO,IAAK;IAC5BR,cAAc,CAACQ,OAAO,CAAC;EACzB,CAAC;EAED1B,SAAS,CAAC,MAAM;IACd,IAAIa,QAAQ,CAACc,MAAM,GAAG,CAAC,EAAE;MACvBX,QAAQ,CAACV,QAAQ,EAAE,CAAC;IACtB;IACAU,QAAQ,CAACT,YAAY,EAAE,CAAC;EAC1B,CAAC,EAAE,CAACS,QAAQ,CAAC,CAAC;EAEd,oBACEN,OAAA;IAAKkB,SAAS,EAAEzB,KAAK,CAAC0B,QAAS;IAAAC,QAAA,gBAC7BpB,OAAA;MAAKkB,SAAS,EAAEzB,KAAK,CAAC4B,MAAO;MAAAD,QAAA,eAC3BpB,OAAA,CAACF,QAAQ;QACPO,QAAQ,EAAEF,QAAQ,CAACc,MAAO;QAC1BR,oBAAoB,EAAEA,oBAAqB;QAC3CM,QAAQ,EAAEA;MAAS;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IACnB;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACE,EACLZ,iBAAiB,aAAjBA,iBAAiB,uBAAjBA,iBAAiB,CAAEa,GAAG,CAAEC,IAAI,IAAK;MAChC,oBACE3B,OAAA,CAACR,IAAI;QAEHoC,EAAE,EAAED,IAAI,CAACC,EAAG;QACZC,IAAI,EAAEF,IAAI,CAACE,IAAK;QAChBC,gBAAgB,EAAEH,IAAI,CAACG,gBAAiB;QACxCC,MAAM,EACJ,CAACJ,IAAI,CAACK,WAAW,GACbL,IAAI,CAACI,MAAM,GACXJ,IAAI,CAACM,MAAM,CAACP,GAAG,CAAEC,IAAI,IAAKA,IAAI,CAACE,IAAI,CAAC,CAACK,IAAI,CAAC,IAAI;MACnD,GARIP,IAAI,CAACC,EAAE;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QASZ;IAEN,CAAC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACE;AAEV,CAAC;AAACvB,EAAA,CArDWD,IAAI;EAAA,QACEN,WAAW,EACXD,WAAW;AAAA;AAAAyC,EAAA,GAFjBlC,IAAI;AAAA,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}