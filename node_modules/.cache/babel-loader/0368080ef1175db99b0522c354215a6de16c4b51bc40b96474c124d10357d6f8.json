{"ast":null,"code":"import { FILTER_GENRES } from \"./actions\";\nimport { GET_GAMES } from \"./actions\";\nimport { CREATE_GAME } from \"./actions\";\nimport { GAME_DETAIL } from \"./actions\";\nimport { ORDER_RATING } from \"./actions\";\nimport { GET_GENRES } from \"./actions\";\nimport { ORDER_ALPHABETIC } from \"./actions\";\nimport { FILTER_CREATE } from \"./actions\";\nconst initialState = {\n  allGames: [],\n  gameDetail: {},\n  allGenres: [],\n  games: []\n};\nconst rootReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case GET_GAMES:\n      return {\n        ...state,\n        allGames: action.payload,\n        games: action.payload\n      };\n    case GAME_DETAIL:\n      return {\n        ...state,\n        gameDetail: action.payload\n      };\n    case GET_GENRES:\n      return {\n        ...state,\n        allGenres: action.payload\n      };\n    case FILTER_CREATE:\n      const filterCreated = action.payload === \"All\" ? state.games : action.payload === \"Created\" ? state.games.filter(game => game.createdInDb) : state.games.filter(elem => !elem.createdInDb);\n      return {\n        ...state,\n        allGames: filterCreated\n      };\n    case FILTER_GENRES:\n      const allVideoGamesG = state.games;\n      const filteredGenre = action.payload === \"All\" ? state.games : allVideoGamesG.filter(gen => {\n        var _gen$genres, _gen$genres$map;\n        return !gen.createInDb ? (_gen$genres = gen.genres) === null || _gen$genres === void 0 ? void 0 : _gen$genres.includes(action.payload) : (_gen$genres$map = gen.genres.map(elem => elem.name)) === null || _gen$genres$map === void 0 ? void 0 : _gen$genres$map.includes(action.payload);\n      });\n      return {\n        ...state,\n        allGames: filteredGenre\n      };\n    case CREATE_GAME:\n      return {\n        ...state,\n        allGames: [...state.allGames, action.payload]\n      };\n    case ORDER_ALPHABETIC:\n      let sortedGames = [...state.games];\n      sortedGames.sort((a, b) => {\n        if (action.payload === \"All\") {\n          return state.allGames;\n        } else if (action.payload === \"A-Z\") {\n          return a.name.localeCompare(b.name);\n        } else {\n          return b.name.localeCompare(a.name);\n        }\n      });\n      return {\n        ...state,\n        allGames: sortedGames\n      };\n    case ORDER_RATING:\n      let orderRat = [...state.games];\n      orderRat.sort((a, b) => {\n        if (action.payload === \"none\") {\n          return state.allGames;\n        } else if (action.payload === \"0-5\") {\n          return a.rating - b.rating;\n        } else {\n          return b.rating - a.rating;\n        }\n      });\n      return {\n        ...state,\n        allGames: orderRat\n      };\n    default:\n      return {\n        ...state\n      };\n  }\n};\nexport default rootReducer;","map":{"version":3,"names":["FILTER_GENRES","GET_GAMES","CREATE_GAME","GAME_DETAIL","ORDER_RATING","GET_GENRES","ORDER_ALPHABETIC","FILTER_CREATE","initialState","allGames","gameDetail","allGenres","games","rootReducer","state","arguments","length","undefined","action","type","payload","filterCreated","filter","game","createdInDb","elem","allVideoGamesG","filteredGenre","gen","_gen$genres","_gen$genres$map","createInDb","genres","includes","map","name","sortedGames","sort","a","b","localeCompare","orderRat","rating"],"sources":["C:/Users/Admin/Desktop/PI-Videogames-main/client/src/Redux/reducer.js"],"sourcesContent":["import { FILTER_GENRES } from \"./actions\";\r\nimport { GET_GAMES } from \"./actions\";\r\nimport { CREATE_GAME } from \"./actions\";\r\nimport { GAME_DETAIL } from \"./actions\";\r\nimport { ORDER_RATING } from \"./actions\";\r\nimport { GET_GENRES } from \"./actions\";\r\nimport { ORDER_ALPHABETIC } from \"./actions\";\r\nimport { FILTER_CREATE } from \"./actions\";\r\n\r\nconst initialState = {\r\n  allGames: [],\r\n  gameDetail: {},\r\n  allGenres: [],\r\n  games: [],\r\n};\r\n\r\nconst rootReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case GET_GAMES:\r\n      return {\r\n        ...state,\r\n        allGames: action.payload,\r\n        games: action.payload,\r\n      };\r\n\r\n    case GAME_DETAIL:\r\n      return {\r\n        ...state,\r\n        gameDetail: action.payload,\r\n      };\r\n\r\n    case GET_GENRES:\r\n      return {\r\n        ...state,\r\n        allGenres: action.payload,\r\n      };\r\n\r\n    case FILTER_CREATE:\r\n      const filterCreated =\r\n        action.payload === \"All\"\r\n          ? state.games\r\n          : action.payload === \"Created\"\r\n          ? state.games.filter((game) => game.createdInDb)\r\n          : state.games.filter((elem) => !elem.createdInDb);\r\n\r\n      return {\r\n        ...state,\r\n        allGames: filterCreated,\r\n      };\r\n\r\n    case FILTER_GENRES:\r\n      const allVideoGamesG = state.games;\r\n\r\n      const filteredGenre =\r\n        action.payload === \"All\"\r\n          ? state.games\r\n          : allVideoGamesG.filter((gen) => {\r\n              return !gen.createInDb\r\n                ? gen.genres?.includes(action.payload)\r\n                : gen.genres.map((elem) => elem.name)?.includes(action.payload);\r\n            });\r\n\r\n      return {\r\n        ...state,\r\n        allGames: filteredGenre,\r\n      };\r\n\r\n    case CREATE_GAME:\r\n      return {\r\n        ...state,\r\n        allGames: [...state.allGames, action.payload],\r\n      };\r\n\r\n    case ORDER_ALPHABETIC:\r\n      let sortedGames = [...state.games];\r\n\r\n      sortedGames.sort((a, b) => {\r\n        if (action.payload === \"All\") {\r\n          return state.allGames;\r\n        } else if (action.payload === \"A-Z\") {\r\n          return a.name.localeCompare(b.name);\r\n        } else {\r\n          return b.name.localeCompare(a.name);\r\n        }\r\n      });\r\n\r\n      return {\r\n        ...state,\r\n        allGames: sortedGames,\r\n      };\r\n\r\n    case ORDER_RATING:\r\n      let orderRat = [...state.games];\r\n\r\n      orderRat.sort((a, b) => {\r\n        if (action.payload === \"none\") {\r\n          return state.allGames;\r\n        } else if (action.payload === \"0-5\") {\r\n          return a.rating - b.rating;\r\n        } else {\r\n          return b.rating - a.rating;\r\n        }\r\n      });\r\n\r\n      return {\r\n        ...state,\r\n        allGames: orderRat,\r\n      };\r\n\r\n    default:\r\n      return { ...state };\r\n  }\r\n};\r\nexport default rootReducer;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}