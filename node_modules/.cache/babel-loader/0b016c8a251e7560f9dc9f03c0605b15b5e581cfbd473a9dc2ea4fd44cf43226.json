{"ast":null,"code":"import { FILTER_GENRES } from \"./actions\";\nimport { GET_GAMES } from \"./actions\";\nimport { CREATE_GAME } from \"./actions\";\nimport { GAME_DETAIL } from \"./actions\";\nimport { ORDER_RATING } from \"./actions\";\nimport { GET_GENRES } from \"./actions\";\nimport { ORDER_ALPHABETIC } from \"./actions\";\nimport { FILTER_CREATE } from \"./actions\";\nconst initialState = {\n  allGames: [],\n  gameDetail: {},\n  allGenres: []\n};\nconst rootReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case GET_GAMES:\n      return {\n        ...state,\n        allGames: action.payload\n      };\n    case GAME_DETAIL:\n      return {\n        ...state,\n        gameDetail: action.payload\n      };\n    case GET_GENRES:\n      return {\n        ...state,\n        allGenres: action.payload\n      };\n    case FILTER_CREATE:\n      const filterCreated = action.payload === \"Created\" ? state.allGames.filter(game => game.createInDb) : state.allGames.filter(elem => !elem.createInDb);\n\n      // const filterCreate =\n      //   action.payload === \"All\"\n      //     ? state.allGames\n      //     : state.allgames.filter((game) => {\n      //         return game.createInDb && action.payload === \"Created\"\n      //           ? game.createInDb\n      //           : !game.createInDb\n      //       });\n      return {\n        ...state,\n        allGames: filterCreated\n      };\n    case FILTER_GENRES:\n      const allVideoGamesG = state.allGames;\n      const filteredGenre = action.payload === \"All\" ? state.allGames : allVideoGamesG.filter(gen => {\n        return !gen.createInDb ? gen.genres.includes(action.payload) : gen.genres.map(elem => elem.name).includes(action.payload);\n      });\n      return {\n        ...state,\n        allGames: filteredGenre\n      };\n    case CREATE_GAME:\n      return {\n        ...state,\n        allGames: [...state.allGames, action.payload]\n      };\n    case ORDER_ALPHABETIC:\n      let sortedGames = [...state.allGames];\n      sortedGames.sort((a, b) => {\n        if (action.payload === \"A-Z\") {\n          return a.name.localeCompare(b.name);\n        } else {\n          return b.name.localeCompare(a.name);\n        }\n      });\n      return {\n        ...state,\n        allGames: sortedGames\n      };\n    case ORDER_RATING:\n      let orderRat = [...state.allGames];\n      const aux = [...state.allGames];\n      orderRat.sort((a, b) => {\n        if (action.payload === \"none\") {\n          return aux;\n        } else if (action.payload === \"0-5\") {\n          return a.rating - b.rating;\n        } else {\n          return b.rating - a.rating;\n        }\n      });\n      return {\n        ...state,\n        allGames: orderRat\n      };\n    default:\n      return {\n        ...state\n      };\n  }\n};\nexport default rootReducer;","map":{"version":3,"names":["FILTER_GENRES","GET_GAMES","CREATE_GAME","GAME_DETAIL","ORDER_RATING","GET_GENRES","ORDER_ALPHABETIC","FILTER_CREATE","initialState","allGames","gameDetail","allGenres","rootReducer","state","arguments","length","undefined","action","type","payload","filterCreated","filter","game","createInDb","elem","allVideoGamesG","filteredGenre","gen","genres","includes","map","name","sortedGames","sort","a","b","localeCompare","orderRat","aux","rating"],"sources":["C:/Users/Admin/Desktop/PI-Videogames-main/client/src/Redux/reducer.js"],"sourcesContent":["import { FILTER_GENRES } from \"./actions\";\r\nimport { GET_GAMES } from \"./actions\";\r\nimport { CREATE_GAME } from \"./actions\";\r\nimport { GAME_DETAIL } from \"./actions\";\r\nimport { ORDER_RATING } from \"./actions\";\r\nimport { GET_GENRES } from \"./actions\";\r\nimport { ORDER_ALPHABETIC } from \"./actions\";\r\nimport { FILTER_CREATE } from \"./actions\";\r\n\r\nconst initialState = {\r\n  allGames: [],\r\n  gameDetail: {},\r\n  allGenres: [],\r\n};\r\n\r\nconst rootReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case GET_GAMES:\r\n      return {\r\n        ...state,\r\n        allGames: action.payload,\r\n      };\r\n\r\n    case GAME_DETAIL:\r\n      return {\r\n        ...state,\r\n        gameDetail: action.payload,\r\n      };\r\n\r\n    case GET_GENRES:\r\n      return {\r\n        ...state,\r\n        allGenres: action.payload,\r\n      };\r\n\r\n    case FILTER_CREATE:\r\n      const filterCreated =\r\n        action.payload === \"Created\"\r\n          ? state.allGames.filter((game) => game.createInDb)\r\n          : state.allGames.filter((elem) => !elem.createInDb);\r\n\r\n      // const filterCreate =\r\n      //   action.payload === \"All\"\r\n      //     ? state.allGames\r\n      //     : state.allgames.filter((game) => {\r\n      //         return game.createInDb && action.payload === \"Created\"\r\n      //           ? game.createInDb\r\n      //           : !game.createInDb\r\n      //       });\r\n      return {\r\n        ...state,\r\n        allGames: filterCreated,\r\n      };\r\n\r\n    case FILTER_GENRES:\r\n      const allVideoGamesG = state.allGames;\r\n\r\n      const filteredGenre =\r\n        action.payload === \"All\"\r\n          ? state.allGames\r\n          : allVideoGamesG.filter((gen) => {\r\n              return !gen.createInDb\r\n                ? gen.genres.includes(action.payload)\r\n                : gen.genres.map((elem) => elem.name).includes(action.payload);\r\n            });\r\n\r\n      return {\r\n        ...state,\r\n        allGames: filteredGenre,\r\n      };\r\n\r\n    case CREATE_GAME:\r\n      return {\r\n        ...state,\r\n        allGames: [...state.allGames, action.payload],\r\n      };\r\n\r\n    case ORDER_ALPHABETIC:\r\n      let sortedGames = [...state.allGames];\r\n\r\n      sortedGames.sort((a, b) => {\r\n        if (action.payload === \"A-Z\") {\r\n          return a.name.localeCompare(b.name);\r\n        } else {\r\n          return b.name.localeCompare(a.name);\r\n        }\r\n      });\r\n\r\n      return {\r\n        ...state,\r\n        allGames: sortedGames,\r\n      };\r\n\r\n    case ORDER_RATING:\r\n      let orderRat = [...state.allGames];\r\n      const aux = [...state.allGames];\r\n\r\n      orderRat.sort((a, b) => {\r\n        if (action.payload === \"none\") {\r\n          return aux;\r\n        } else if (action.payload === \"0-5\") {\r\n          return a.rating - b.rating;\r\n        } else {\r\n          return b.rating - a.rating;\r\n        }\r\n      });\r\n\r\n      return {\r\n        ...state,\r\n        allGames: orderRat,\r\n      };\r\n\r\n    default:\r\n      return { ...state };\r\n  }\r\n};\r\nexport default rootReducer;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}